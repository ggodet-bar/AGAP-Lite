<h3><%= field.name.capitalize %>
<% if @noob_mode %>
<%= link_to_function "?", "new Effect.toggle('effect_interface_#{field.index}', 'slide', { duration : 0.2})", :class => "question_mark"%>
<%- end %></h3>
    <% if @noob_mode %>
    <div id=<%="effect_interface_#{field.index}"%> class="helper_info" style="display:none">
    <p><%= field.description %></p>
    </div>
    <% end %>
<% case field.field_type 
   when 'string' %>
   <% s_instances = @process_pattern.string_instances.select{|a| a.field_descriptor_id == field.id} %>
   <% string_instance = s_instances.empty? ? @process_pattern.string_instances.build({:field_descriptor_id => field.id}) : s_instances.first %>
   <% f.fields_for :string_instances, string_instance do |string_form| %>
   <p><%= string_form.text_field :content, :size => 60 %></p>
   <%= string_form.hidden_field :field_descriptor_id %>
   <%- end %><% 
   when 'text' %>
   <% t_instances = @process_pattern.text_instances.select{|a| a.field_descriptor_id == field.id} %>
   <% text_instance = t_instances.empty? ? @process_pattern.text_instances.build({:field_descriptor_id => field.id}) : t_instances.first %>
   <% f.fields_for :text_instances, text_instance do |text_form| %>
   <p><%= text_form.text_area :content, {:class => 'mceEditor', :cols => 60} %></p>
   <%= text_form.hidden_field :field_descriptor_id %>
   <%- end %><% 
   when 'model_set' %>
    <p>Should display a model set</p><%
   when 'mappable_image' %>
    <div id=<%="mappable_image_#{field.id}"%>>
    <% image_instance = @process_pattern.mappable_images.select{|a| a.field_descriptor_id == field.id}.first %>
    <% image_instance = image_instance.blank? ? @process_pattern.mappable_images.build(:field_descriptor_id => field.id) : image_instance%>
    <% f.fields_for :mappable_images, image_instance do |img_form| %>
      <%= img_form.file_field :image %>
      <%= img_form.hidden_field :field_descriptor_id %>
    <%- end %>
    <% unless image_instance.new_record? %>
    <%= "<dl id=\"mappable_image_image_#{field.id}\" class=\"mappable_image\"  style=\"background: url(#{image_instance.image.url}) no-repeat; height: #{image_instance.image_height}px; width: #{image_instance.image_width}px;\"></dl>" %>
    
    <% the_maps = @process_pattern.maps %>
    <% f.fields_for :maps, the_maps do |map_form| %>
      <%= render :partial => "map_fields", :locals => {:f => map_form} %>
    <%- end %>
    <% f.fields_for :maps, @process_pattern.maps.build(:mappable_image_id => image_instance.id), :child_index => "blank_map_record" do |map_form| %>
      <%= render :partial => "map_fields", :locals => {:f => map_form} %>
    <%- end %>
    <%- end %>
    </div><%
    when 'classification' %>
    <% classification = @process_pattern.pattern_system.classification_elements.select{|a| a.field_descriptor_id == field.id} %>
    <% f.fields_for :classification_selections, @classifications[field.id] do |classif_form| %>
      <%= classif_form.collection_select(:classification_element_id, classification, :id, :name, {:include_blank => true}, {:class => 'agap_single_selector'}) %>
    <%- end %><%
   when 'multi_classification' %>
    <% multi_classif = @process_pattern.pattern_system.classification_elements.select{|a| a.field_descriptor_id == field.id} %>
    <%= select_tag "pattern[multi_classification_selections][#{field.id}][]", options_from_collection_for_select(multi_classif, :id, :name, @classifications[field.id].map(&:classification_element_id)), {:multiple => true, :class => "agap_multiple_selector"} %>
<%- end %>
